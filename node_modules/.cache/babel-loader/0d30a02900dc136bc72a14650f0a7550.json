{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst api = {\n  url: `http://api.openweathermap.org/data/2.5/`,\n  key: `40c21a2013ada1779d25b9efb54161bc`\n};\nexport function useWeatherData() {\n  _s();\n\n  const [data, setData] = useState();\n  const [location, setLocation] = useState('Moscow');\n  useEffect(() => {\n    axios.get(`${api.url}weather?q=${location}&units=metric&appid=${api.key}`).then(resp => {\n      console.log(resp);\n      setData(resp);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  return [data];\n}\n\n_s(useWeatherData, \"VCfx/jzxqpV0dQX6t5RbsSTk1EA=\");","map":{"version":3,"sources":["/Users/alinamatveeva/Desktop/ПОРТФОЛИО/Weather/src/hooks/useWeatherData.tsx"],"names":["axios","useEffect","useState","api","url","key","useWeatherData","data","setData","location","setLocation","get","then","resp","console","log","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAG,yCADI;AAEVC,EAAAA,GAAG,EAAG;AAFI,CAAZ;AAKA,OAAO,SAASC,cAAT,GAA0B;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,QAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACW,GAAN,CAAW,GAAER,GAAG,CAACC,GAAI,aAAYK,QAAS,uBAAsBN,GAAG,CAACE,GAAI,EAAxE,EACGO,IADH,CACSC,IAAD,IAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,OAAO,CAACK,IAAD,CAAP;AACD,KAJH,EAKGG,KALH,CAKS,UAAUC,KAAV,EAAsB;AAC3BH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SAAO,CAACV,IAAD,CAAP;AACD;;GAhBeD,c","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst api = {\n  url: `http://api.openweathermap.org/data/2.5/`,\n  key: `40c21a2013ada1779d25b9efb54161bc`,\n}\n\nexport function useWeatherData() {\n  const [data, setData] = useState();\n  const [location, setLocation] = useState('Moscow');\n\n  useEffect(() => {\n    axios.get(`${api.url}weather?q=${location}&units=metric&appid=${api.key}`)\n      .then((resp: any) => {\n        console.log(resp);\n        setData(resp);\n      })\n      .catch(function (error: any) {\n        console.error(error);\n      });\n  }, [])\n\n  return [data];\n}"]},"metadata":{},"sourceType":"module"}