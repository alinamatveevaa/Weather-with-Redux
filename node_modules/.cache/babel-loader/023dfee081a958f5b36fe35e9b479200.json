{"ast":null,"code":"var _jsxFileName = \"/Users/alinamatveeva/Desktop/\\u041F\\u041E\\u0420\\u0422\\u0424\\u041E\\u041B\\u0418\\u041E/Weather/src/components/ContainerWeather.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Weather } from \"./Weather/Weather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  url: `http://api.openweathermap.org/data/2.5/`,\n  key: `40c21a2013ada1779d25b9efb54161bc`\n};\nexport function ContainerWeather() {\n  _s();\n\n  const [data, setData] = useState();\n  const [location, setLocation] = useState('Moscow');\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(false);\n  const ref = useRef('Moscow');\n  console.log(ref.current);\n  useEffect(() => {\n    axios.get(`${api.url}weather?q=${ref.current}&units=metric&appid=${api.key}`).then(resp => {\n      console.log('from request: ', resp);\n      setData(resp);\n    }).catch(function (error) {\n      console.error('Error: ', error);\n      setError(true);\n    });\n  }, [ref.current]);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleKeyUp = event => {\n    // if (event.code === 'Enter' && (value.length !== 0)) {\n    // setLocation(value.trim())\n    // setError(false);\n    // };\n    ref.current = value.trim();\n    setLocation(ref.current);\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Weather, {\n    location: location,\n    onKeyUp: handleKeyUp,\n    onChange: handleChange,\n    value: value,\n    data: data,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContainerWeather, \"pGSQYNRuOa77Ft3qlZXi0kD11N0=\");\n\n_c = ContainerWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerWeather\");","map":{"version":3,"sources":["/Users/alinamatveeva/Desktop/ПОРТФОЛИО/Weather/src/components/ContainerWeather.tsx"],"names":["axios","useEffect","useRef","useState","Weather","api","url","key","ContainerWeather","data","setData","location","setLocation","value","setValue","error","setError","ref","console","log","current","get","then","resp","catch","handleChange","event","target","handleKeyUp","trim"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA+DC,SAA/D,EAA0EC,MAA1E,EAAkFC,QAAlF,QAAkG,OAAlG;AACA,SAA0BC,OAA1B,QAAyC,mBAAzC;;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAG,yCADI;AAEVC,EAAAA,GAAG,EAAG;AAFI,CAAZ;AAKA,OAAO,SAASC,gBAAT,GAA4B;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,QAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMc,GAAG,GAAGf,MAAM,CAAC,QAAD,CAAlB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACqB,GAAN,CAAW,GAAEhB,GAAG,CAACC,GAAI,aAAYW,GAAG,CAACG,OAAQ,uBAAsBf,GAAG,CAACE,GAAI,EAA3E,EACGe,IADH,CACSC,IAAD,IAAiB;AACrBL,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BI,IAA7B;AACAb,MAAAA,OAAO,CAACa,IAAD,CAAP;AACD,KAJH,EAKGC,KALH,CAKS,UAAUT,KAAV,EAAsB;AAC3BG,MAAAA,OAAO,CAACH,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACAC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KARH;AASD,GAVQ,EAUN,CAACC,GAAG,CAACG,OAAL,CAVM,CAAT;;AAYA,QAAMK,YAAY,GAAIC,KAAD,IAA0C;AAC7DZ,IAAAA,QAAQ,CAACY,KAAK,CAACC,MAAN,CAAad,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMe,WAAW,GAAIF,KAAD,IAAkD;AACpE;AACE;AACA;AACF;AACAT,IAAAA,GAAG,CAACG,OAAJ,GAAcP,KAAK,CAACgB,IAAN,EAAd;AACAjB,IAAAA,WAAW,CAACK,GAAG,CAACG,OAAL,CAAX;AACAJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GARD;;AAUA,sBACE,QAAC,OAAD;AACE,IAAA,QAAQ,EAAEL,QADZ;AAEE,IAAA,OAAO,EAAEiB,WAFX;AAGE,IAAA,QAAQ,EAAEH,YAHZ;AAIE,IAAA,KAAK,EAAEZ,KAJT;AAKE,IAAA,IAAI,EAAEJ,IALR;AAME,IAAA,KAAK,EAAEM;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA7CeP,gB;;KAAAA,gB","sourcesContent":["import axios from \"axios\";\nimport { ChangeEvent, KeyboardEventHandler, MouseEventHandler, useEffect, useRef, useState } from \"react\";\nimport { IData, IWeather, Weather } from \"./Weather/Weather\";\n\nconst api = {\n  url: `http://api.openweathermap.org/data/2.5/`,\n  key: `40c21a2013ada1779d25b9efb54161bc`,\n}\n\nexport function ContainerWeather() {\n  const [data, setData] = useState<IData>();\n  const [location, setLocation] = useState('Moscow');\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(false);\n\n  const ref = useRef('Moscow');\n  console.log(ref.current)\n\n  useEffect(() => {\n    axios.get(`${api.url}weather?q=${ref.current}&units=metric&appid=${api.key}`)\n      .then((resp: IData) => {\n        console.log('from request: ',resp);\n        setData(resp);\n      })\n      .catch(function (error: any) {\n        console.error('Error: ', error);\n        setError(true);\n      });\n  }, [ref.current])\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  }\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    // if (event.code === 'Enter' && (value.length !== 0)) {\n      // setLocation(value.trim())\n      // setError(false);\n    // };\n    ref.current = value.trim();\n    setLocation(ref.current);\n    setError(false);\n  }\n\n  return (\n    <Weather \n      location={location} \n      onKeyUp={handleKeyUp} \n      onChange={handleChange} \n      value={value} \n      data={data}\n      error={error}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}