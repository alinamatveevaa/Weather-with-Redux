{"ast":null,"code":"var _jsxFileName = \"/Users/alinamatveeva/Desktop/\\u041F\\u041E\\u0420\\u0422\\u0424\\u041E\\u041B\\u0418\\u041E/Weather/src/components/Content/Content.tsx\";\nimport { formatCountry } from '../../utils/formatCountry';\nimport { formatDate } from '../../utils/formatDate';\nimport { formatString } from '../../utils/formatString';\nimport styles from './content.module.css';\nimport { ContentList } from '../ContentList/ContentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Content(_ref) {\n  let {\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.location,\n      children: [data.name, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.country,\n        children: formatCountry(data.sys.country)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.date,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.dateParag,\n        children: formatDate(new Date()).month + ' ' + formatDate(new Date()).date + ', ' + formatDate(new Date()).year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.dateParag,\n        children: formatDate(new Date()).day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.weather,\n      children: data.weather && data.weather.map(elem => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"weather__descr\",\n          children: formatString(`${elem.description}`)\n        }, elem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentList, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/alinamatveeva/Desktop/ПОРТФОЛИО/Weather/src/components/Content/Content.tsx"],"names":["formatCountry","formatDate","formatString","styles","ContentList","Content","data","content","location","name","country","sys","date","dateParag","Date","month","year","day","weather","map","elem","description","id"],"mappings":";AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAGA,OAAO,SAASC,OAAT,OAAgC;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACnC,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACI,OAAvB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAEJ,MAAM,CAACK,QAAtB;AAAA,iBACKF,IAAI,CAACG,IADV,eAEI;AAAM,QAAA,SAAS,EAAEN,MAAM,CAACO,OAAxB;AAAA,kBAAkCV,aAAa,CAACM,IAAI,CAACK,GAAL,CAASD,OAAV;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACS,IAAvB;AAAA,8BACI;AAAM,QAAA,SAAS,EAAET,MAAM,CAACU,SAAxB;AAAA,kBACKZ,UAAU,CAAC,IAAIa,IAAJ,EAAD,CAAV,CAAuBC,KAAvB,GAA+B,GAA/B,GAAqCd,UAAU,CAAC,IAAIa,IAAJ,EAAD,CAAV,CAAuBF,IAA5D,GAAmE,IAAnE,GAA0EX,UAAU,CAAC,IAAIa,IAAJ,EAAD,CAAV,CAAuBE;AADtG;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAM,QAAA,SAAS,EAAEb,MAAM,CAACU,SAAxB;AAAA,kBACKZ,UAAU,CAAC,IAAIa,IAAJ,EAAD,CAAV,CAAuBG;AAD5B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAaI;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,OAAvB;AAAA,gBACKZ,IAAI,CAACY,OAAL,IACGZ,IAAI,CAACY,OAAL,CAAaC,GAAb,CAAkBC,IAAD,IAAe;AAC5B,4BAAO;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,oBACGlB,YAAY,CAAE,GAAEkB,IAAI,CAACC,WAAY,EAArB;AADf,WAAsCD,IAAI,CAACE,EAA3C;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGH,OAJD;AAFR;AAAA;AAAA;AAAA;AAAA,YAbJ,eAsBI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEhB;AAAnB;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;KA3BeD,O","sourcesContent":["import { formatCountry } from '../../utils/formatCountry';\nimport { formatDate } from '../../utils/formatDate';\nimport { formatString } from '../../utils/formatString';\nimport styles from './content.module.css';\nimport { ContentList } from '../ContentList/ContentList';\nimport { IData } from '../Weather/Weather';\n\nexport function Content({data}: IData) {\n    return (\n        <div className={styles.content}>\n            <h2 className={styles.location}>\n                {data.name}\n                <span className={styles.country}>{formatCountry(data.sys.country)}</span>\n            </h2>\n            <div className={styles.date}>\n                <span className={styles.dateParag}>\n                    {formatDate(new Date()).month + ' ' + formatDate(new Date()).date + ', ' + formatDate(new Date()).year}\n                </span>\n                <span className={styles.dateParag}>\n                    {formatDate(new Date()).day}\n                </span>\n            </div>\n            <div className={styles.weather}>\n                {data.weather &&\n                    data.weather.map((elem: any) => {\n                        return <span className='weather__descr' key={elem.id}>\n                                 {formatString(`${elem.description}`)}\n                               </span>\n                    })\n                }\n            </div>\n            <ContentList data={data} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}