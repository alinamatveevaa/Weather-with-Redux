{"ast":null,"code":"var _jsxFileName = \"/Users/alinamatveeva/Desktop/\\u041F\\u041E\\u0420\\u0422\\u0424\\u041E\\u041B\\u0418\\u041E/Weather/src/context/weatherContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useWeatherData } from \"../hooks/useWeatherData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const weatherContext = /*#__PURE__*/React.createContext([]);\nexport function WeatherContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [data] = useWeatherData();\n  return /*#__PURE__*/_jsxDEV(weatherContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherContextProvider, \"7yV9S4zqxwq4+owKmuCHC3q1IFY=\", false, function () {\n  return [useWeatherData];\n});\n\n_c = WeatherContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherContextProvider\");","map":{"version":3,"sources":["/Users/alinamatveeva/Desktop/ПОРТФОЛИО/Weather/src/context/weatherContext.tsx"],"names":["React","useWeatherData","weatherContext","createContext","WeatherContextProvider","children","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAMA,OAAO,MAAMC,cAAc,gBAAGF,KAAK,CAACG,aAAN,CAAqC,EAArC,CAAvB;AAEP,OAAO,SAASC,sBAAT,OAA6E;AAAA;;AAAA,MAA7C;AAAEC,IAAAA;AAAF,GAA6C;AAChF,QAAM,CAACC,IAAD,IAASL,cAAc,EAA7B;AAEA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEK,IAAhC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAReD,sB;UACGH,c;;;KADHG,sB","sourcesContent":["import React from \"react\";\nimport { useWeatherData } from \"../hooks/useWeatherData\";\n\ninterface IWeatherContext {\n    data?: any;\n}\n\nexport const weatherContext = React.createContext<IWeatherContext>([]);\n\nexport function WeatherContextProvider({ children }: { children: React.ReactNode }) {\n    const [data] = useWeatherData();\n\n    return (\n        <weatherContext.Provider value={data}>\n            {children}\n        </weatherContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}